{"ast":null,"code":"import React from\"react\";import{BarChart,Bar,XAxis,YAxis,Tooltip,ResponsiveContainer,CartesianGrid}from\"recharts\";import\"./UserActivityChart.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const activityDescriptions={22:{name:\"Breathing Exercise\",label:\"Breath\",color:\"#72A0C1\",className:\"breathing-bar\",textClass:\"breathing\"},23:{name:\"Inspirational Quote\",label:\"Quote\",color:\"#A7C7E7\",className:\"quote-bar\",textClass:\"quote\"},24:{name:\"Joke Generator\",label:\"Joke\",color:\"#B5EAD7\",className:\"joke-bar\",textClass:\"joke\"}};const UserActivityChart=_ref=>{let{activities}=_ref;console.log(\"🚀 Raw Activities Data:\",activities);if(!activities.length)return/*#__PURE__*/_jsx(\"p\",{children:\"No activities recorded yet.\"});const activityCounts=activities.reduce((acc,activity)=>{const activityId=Number(activity.name);acc[activityId]=(acc[activityId]||0)+1;return acc;},{});console.log(\"🧐 Processed Activity Counts:\",activityCounts);const chartData=Object.keys(activityCounts).map(id=>{const activity=activityDescriptions[id]||{name:`Unknown Activity (${id})`,label:`Unknown (${id})`,color:\"#CCCCCC\",className:\"\",textClass:\"\"};console.log(`🔄 Mapping \"${id}\" → \"${activity.name}\"`);return{name:activity.label,count:activityCounts[id],color:activity.color,className:activity.className};});console.log(\"📊 Final Chart Data:\",chartData);return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Activity Overview\"}),/*#__PURE__*/_jsx(\"div\",{className:\"graph-wrapper\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:500,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData,barSize:window.innerWidth<768?60:150,margin:{top:40,right:window.innerWidth<768?20:100,left:window.innerWidth<768?20:100,bottom:window.innerWidth<768?80:120},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",tick:{fontSize:window.innerWidth<768?12:18},interval:0}),/*#__PURE__*/_jsx(YAxis,{tick:{fontSize:window.innerWidth<768?12:16}}),/*#__PURE__*/_jsx(Tooltip,{}),chartData.map((data,index)=>/*#__PURE__*/_jsx(Bar,{dataKey:\"count\",fill:data.color,radius:[10,10,0,0]},index))]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB Activity Breakdown:\"}),/*#__PURE__*/_jsx(\"ul\",{children:Object.keys(activityCounts).map(id=>{const activity=activityDescriptions[id]||{name:`Unknown Activity (${id})`,textClass:\"\"};return/*#__PURE__*/_jsxs(\"li\",{className:activity.textClass,children:[/*#__PURE__*/_jsx(\"strong\",{children:activity.name}),\": \",activityCounts[id],\" times\"]},id);})})]})]});};export default UserActivityChart;","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","jsx","_jsx","jsxs","_jsxs","activityDescriptions","name","label","color","className","textClass","UserActivityChart","_ref","activities","console","log","length","children","activityCounts","reduce","acc","activity","activityId","Number","chartData","Object","keys","map","id","count","width","height","data","barSize","window","innerWidth","margin","top","right","left","bottom","strokeDasharray","dataKey","tick","fontSize","interval","index","fill","radius"],"sources":["/Users/terramanning/home/turing_work/3mod/mood-boost-forked/mood_boost_fe/mood_boost_fe/src/UserProfile/UserActivityChart.jsx"],"sourcesContent":["import React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from \"recharts\";\nimport \"./UserActivityChart.css\";\n\nconst activityDescriptions = {\n  22: { name: \"Breathing Exercise\", label: \"Breath\", color: \"#72A0C1\", className: \"breathing-bar\", textClass: \"breathing\" },\n  23: { name: \"Inspirational Quote\", label: \"Quote\", color: \"#A7C7E7\", className: \"quote-bar\", textClass: \"quote\" },\n  24: { name: \"Joke Generator\", label: \"Joke\", color: \"#B5EAD7\", className: \"joke-bar\", textClass: \"joke\" },\n};\n\nconst UserActivityChart = ({ activities }) => {\n  console.log(\"🚀 Raw Activities Data:\", activities);\n\n  if (!activities.length) return <p>No activities recorded yet.</p>;\n\n  const activityCounts = activities.reduce((acc, activity) => {\n    const activityId = Number(activity.name);\n    acc[activityId] = (acc[activityId] || 0) + 1;\n    return acc;\n  }, {});\n\n  console.log(\"🧐 Processed Activity Counts:\", activityCounts);\n\n  const chartData = Object.keys(activityCounts).map((id) => {\n    const activity = activityDescriptions[id] || { name: `Unknown Activity (${id})`, label: `Unknown (${id})`, color: \"#CCCCCC\", className: \"\", textClass: \"\" };\n    console.log(`🔄 Mapping \"${id}\" → \"${activity.name}\"`);\n    \n    return {\n      name: activity.label,\n      count: activityCounts[id],\n      color: activity.color,\n      className: activity.className,\n    };\n  });\n\n  console.log(\"📊 Final Chart Data:\", chartData);\n\n  return (\n    <div className=\"chart-container\">\n      <h3>Your Activity Overview</h3>\n      <div className=\"graph-wrapper\">\n        <ResponsiveContainer width=\"100%\" height={500}>\n          <BarChart\n            data={chartData}\n            barSize={window.innerWidth < 768 ? 60 : 150}\n            margin={{\n              top: 40,\n              right: window.innerWidth < 768 ? 20 : 100,\n              left: window.innerWidth < 768 ? 20 : 100,\n              bottom: window.innerWidth < 768 ? 80 : 120,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" tick={{ fontSize: window.innerWidth < 768 ? 12 : 18 }} interval={0} />\n            <YAxis tick={{ fontSize: window.innerWidth < 768 ? 12 : 16 }} />\n            <Tooltip />\n            {chartData.map((data, index) => (\n              <Bar key={index} dataKey=\"count\" fill={data.color} radius={[10, 10, 0, 0]} />\n            ))}\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      <div className=\"activity-list\">\n        <h3>📋 Activity Breakdown:</h3>\n        <ul>\n          {Object.keys(activityCounts).map((id) => {\n            const activity = activityDescriptions[id] || { name: `Unknown Activity (${id})`, textClass: \"\" };\n            return (\n              <li key={id} className={activity.textClass}>\n                <strong>{activity.name}</strong>: {activityCounts[id]} times\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n  \n};\n\nexport default UserActivityChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}